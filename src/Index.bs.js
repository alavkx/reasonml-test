// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReactDOMRe from "reason-react/src/ReactDOMRe.js";
import * as Util$ReactHooksTemplate from "./Util.bs.js";
import * as Player$ReactHooksTemplate from "./Player/Player.bs.js";

require("./App.css");

var persistedTracks = /* array */[
  /* record */[
    /* name */"007",
    /* artist */"Kromestar",
    /* src */"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3"
  ],
  /* record */[
    /* name */"008",
    /* artist */"Kromestar",
    /* src */"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3"
  ],
  /* record */[
    /* name */"009",
    /* artist */"Kromestar",
    /* src */"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3"
  ],
  /* record */[
    /* name */"0010",
    /* artist */"Kromestar",
    /* src */"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3"
  ]
];

function Index$App(Props) {
  var match = React.useState((function () {
          return undefined;
        }));
  var setTracks = match[1];
  var tracks = match[0];
  React.useEffect((function () {
          var timeoutId = setTimeout((function (param) {
                  return Curry._1(setTracks, (function (param) {
                                return persistedTracks;
                              }));
                }), 500);
          return (function (param) {
                    clearTimeout(timeoutId);
                    return /* () */0;
                  });
        }), /* array */[setTracks]);
  if (tracks !== undefined) {
    return React.createElement(Player$ReactHooksTemplate.make, {
                tracks: tracks
              });
  } else {
    return Util$ReactHooksTemplate.str("Booting up the most incredible experience of your life...");
  }
}

var App = /* module */[
  /* persistedTracks */persistedTracks,
  /* make */Index$App
];

ReactDOMRe.renderToElementWithId(React.createElement(Index$App, { }), "root");

export {
  App ,
  
}
/*  Not a pure module */
