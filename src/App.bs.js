// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");

var tracks = /* array */[
  /* record */[
    /* name */"007",
    /* artist */"Kromestar"
  ],
  /* record */[
    /* name */"008",
    /* artist */"Kromestar"
  ],
  /* record */[
    /* name */"009",
    /* artist */"Kromestar"
  ],
  /* record */[
    /* name */"010",
    /* artist */"Kromestar"
  ],
  /* record */[
    /* name */"011",
    /* artist */"Kromestar"
  ],
  /* record */[
    /* name */"012",
    /* artist */"Kromestar"
  ],
  /* record */[
    /* name */"013",
    /* artist */"Kromestar"
  ]
];

function getRowStatus(index, xs) {
  if (index !== 0) {
    if (index >= (xs.length - 1 | 0)) {
      return /* Last */2;
    } else {
      return /* Middle */1;
    }
  } else {
    return /* First */0;
  }
}

function keyboardEvent(e) {
  var match = e.key;
  switch (match) {
    case "ArrowDown" : 
        return /* MoveDown */1;
    case "ArrowUp" : 
        return /* MoveUp */0;
    default:
      return /* DoNothing */2;
  }
}

function App(Props) {
  var match = React.useReducer((function (state, $$event) {
          var match = state[/* rowStatus */1];
          var exit = 0;
          var exit$1 = 0;
          if (typeof $$event === "number") {
            if ($$event >= 2) {
              return state;
            } else {
              switch (match) {
                case 0 : 
                    if ($$event !== 0) {
                      exit = 1;
                    } else {
                      return state;
                    }
                    break;
                case 1 : 
                    exit$1 = 2;
                    break;
                case 2 : 
                    if ($$event !== 0) {
                      return state;
                    } else {
                      exit$1 = 2;
                    }
                    break;
                
              }
            }
          } else {
            var index = $$event[0];
            return /* record */[
                    /* selectedRowIndex */index,
                    /* rowStatus */getRowStatus(index, tracks)
                  ];
          }
          if (exit$1 === 2) {
            if ($$event !== 0) {
              exit = 1;
            } else {
              var nextId = state[/* selectedRowIndex */0] - 1 | 0;
              return /* record */[
                      /* selectedRowIndex */nextId,
                      /* rowStatus */getRowStatus(nextId, tracks)
                    ];
            }
          }
          if (exit === 1) {
            var nextId$1 = state[/* selectedRowIndex */0] + 1 | 0;
            return /* record */[
                    /* selectedRowIndex */nextId$1,
                    /* rowStatus */getRowStatus(nextId$1, tracks)
                  ];
          }
          
        }), /* record */[
        /* selectedRowIndex */0,
        /* rowStatus : First */0
      ]);
  var dispatch = match[1];
  var state = match[0];
  return React.createElement("table", {
              tabIndex: 0,
              onKeyDown: (function (e) {
                  return Curry._1(dispatch, keyboardEvent(e));
                })
            }, $$Array.mapi((function (i, param) {
                    var match = state[/* selectedRowIndex */0] === i;
                    return React.createElement("tr", {
                                key: String(i),
                                style: {
                                  backgroundColor: match ? "blue" : "white"
                                },
                                onClick: (function (param) {
                                    return Curry._1(dispatch, /* SelectRow */[i]);
                                  })
                              }, React.createElement("td", undefined, param[/* artist */1]), React.createElement("td", undefined, param[/* name */0]));
                  }), tracks));
}

var make = App;

exports.tracks = tracks;
exports.getRowStatus = getRowStatus;
exports.keyboardEvent = keyboardEvent;
exports.make = make;
/* react Not a pure module */
